{"ast":null,"code":"var _jsxFileName = \"/home/rajesh/carto/carto/src/Timeline.js\";\nimport React from \"react\";\nimport { data } from \"./timelineData\";\nimport TimelineItem from \"./TimelineItem\";\n\nconst TimeLine = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"wrapper\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"flex\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }\n}, data.name), /*#__PURE__*/React.createElement(\"div\", {\n  className: data.tasks[data.tasks.length - 1].isComplete ? \"complete\" : \"incomplete m\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 7\n  }\n}, \"complete\")), data.tasks.map((el, index) => /*#__PURE__*/React.createElement(TimelineItem, {\n  el: el,\n  key: index,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }\n}, \"Progress: (\", Math.round(+data.tasks.filter(x => x.isComplete).length / data.tasks.length * 100), \"%)\"), /*#__PURE__*/React.createElement(\"progress\", {\n  className: \"progress mb-5\",\n  value: Math.round(+data.tasks.filter(x => x.isComplete).length / data.tasks.length * 100),\n  max: \"100\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }\n}));\n\nexport default TimeLine;","map":{"version":3,"sources":["/home/rajesh/carto/carto/src/Timeline.js"],"names":["React","data","TimelineItem","TimeLine","name","tasks","length","isComplete","map","el","index","Math","round","filter","x"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,QAAQ,GAAG,mBACf;AAAK,EAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAK,EAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKF,IAAI,CAACG,IAAV,CADF,eAEE;AACE,EAAA,SAAS,EACPH,IAAI,CAACI,KAAL,CAAWJ,IAAI,CAACI,KAAL,CAAWC,MAAX,GAAoB,CAA/B,EAAkCC,UAAlC,GACI,UADJ,GAEI,cAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF,EAWGN,IAAI,CAACI,KAAL,CAAWG,GAAX,CAAe,CAACC,EAAD,EAAKC,KAAL,kBACd,oBAAC,YAAD;AAAc,EAAA,EAAE,EAAED,EAAlB;AAAsB,EAAA,GAAG,EAAEC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CAXH,eAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEEC,IAAI,CAACC,KAAL,CACC,CAACX,IAAI,CAACI,KAAL,CAAWQ,MAAX,CAAmBC,CAAD,IAAOA,CAAC,CAACP,UAA3B,EAAuCD,MAAxC,GAAiDL,IAAI,CAACI,KAAL,CAAWC,MAA7D,GACA,GAFA,CAFF,OAfJ,eAuBI;AAAU,EAAA,SAAS,EAAC,eAApB;AAAoC,EAAA,KAAK,EAAEK,IAAI,CAACC,KAAL,CACxC,CAACX,IAAI,CAACI,KAAL,CAAWQ,MAAX,CAAmBC,CAAD,IAAOA,CAAC,CAACP,UAA3B,EAAuCD,MAAxC,GAAiDL,IAAI,CAACI,KAAL,CAAWC,MAA7D,GACA,GAFyC,CAA3C;AAGG,EAAA,GAAG,EAAC,KAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAvBJ,CADF;;AAkCA,eAAeH,QAAf","sourcesContent":["import React from \"react\";\nimport { data } from \"./timelineData\";\nimport TimelineItem from \"./TimelineItem\";\n\nconst TimeLine = () => (\n  <div className=\"wrapper\">\n    <div className=\"flex\">\n      <h1>{data.name}</h1>\n      <div\n        className={\n          data.tasks[data.tasks.length - 1].isComplete\n            ? \"complete\"\n            : \"incomplete m\"\n        }\n      >complete</div>\n    </div>\n    {data.tasks.map((el, index) => (\n      <TimelineItem el={el} key={index} />\n    ))}\n\n      <h2>\n        Progress:\n      ({Math.round(\n        (+data.tasks.filter((x) => x.isComplete).length / data.tasks.length) *\n        100\n        )}%)\n      \n    </h2>\n      <progress className=\"progress mb-5\" value={Math.round(\n        (+data.tasks.filter((x) => x.isComplete).length / data.tasks.length) *\n        100\n      )} max=\"100\" />\n \n\n  </div>\n);\n\n\nexport default TimeLine;\n"]},"metadata":{},"sourceType":"module"}