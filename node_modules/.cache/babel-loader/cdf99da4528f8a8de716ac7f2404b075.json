{"ast":null,"code":"var _jsxFileName = \"/home/rajesh/carto/carto/src/Timeline.js\";\nimport React from \"react\";\nimport { data } from \"./timelineData\";\nimport TimelineItem from \"./TimelineItem\";\n\nconst TimeLine = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 4\n  }\n}), \" \", /*#__PURE__*/React.createElement(\"div\", {\n  className: data.tasks[data.tasks.length - 1].isComplete ? \"complete\" : \"incomplete\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 14\n  }\n}), data.tasks.map((el, index) => /*#__PURE__*/React.createElement(TimelineItem, {\n  el: el,\n  key: index,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 13\n  }\n})), /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }\n}, \"Progress:\", Math.round(+data.tasks.filter(x => x.isComplete).length / data.tasks.length * 100), \"%\"));\n\nexport default TimeLine;","map":{"version":3,"sources":["/home/rajesh/carto/carto/src/Timeline.js"],"names":["React","data","TimelineItem","TimeLine","tasks","length","isComplete","map","el","index","Math","round","filter","x"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAIA,MAAMC,QAAQ,GAAG,mBACf,uDACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,oBACW;AAAK,EAAA,SAAS,EAAEF,IAAI,CAACG,KAAL,CAAWH,IAAI,CAACG,KAAL,CAAWC,MAAX,GAAkB,CAA7B,EAAgCC,UAAhC,GAA2C,UAA3C,GAAsD,YAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADX,EAEOL,IAAI,CAACG,KAAL,CAAWG,GAAX,CAAe,CAACC,EAAD,EAAKC,KAAL,kBACZ,oBAAC,YAAD;AAAc,EAAA,EAAE,EAAED,EAAlB;AAAsB,EAAA,GAAG,EAAEC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADH,CAFP,eAMM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAcC,IAAI,CAACC,KAAL,CAAW,CAACV,IAAI,CAACG,KAAL,CAAWQ,MAAX,CAAkBC,CAAC,IAAEA,CAAC,CAACP,UAAvB,EAAmCD,MAApC,GAA2CJ,IAAI,CAACG,KAAL,CAAWC,MAAtD,GAA6D,GAAxE,CAAd,MANN,CADF;;AAWA,eAAeF,QAAf","sourcesContent":["import React from \"react\";\nimport { data } from \"./timelineData\";\nimport TimelineItem from \"./TimelineItem\";\n\n\n\nconst TimeLine = () => (\n  <>\n   <h1></h1> <div className={data.tasks[data.tasks.length-1].isComplete?\"complete\":\"incomplete\"}></div>    \n        {data.tasks.map((el, index) => (\n            <TimelineItem el={el} key={index} />\n        ))}\n\n        <h2>Progress:{Math.round(+data.tasks.filter(x=>x.isComplete).length/data.tasks.length*100)}%</h2>\n  </>\n);\n\nexport default TimeLine;\n"]},"metadata":{},"sourceType":"module"}