{"ast":null,"code":"import React from\"react\";import{data}from\"./timelineData\";import TimelineItem from\"./TimelineItem\";var TimeLine=function TimeLine(){return/*#__PURE__*/React.createElement(\"div\",{className:\"timeline\"},/*#__PURE__*/React.createElement(\"div\",{className:\"flex mt-5\"},/*#__PURE__*/React.createElement(\"h1\",null,data.name,\":\"),/*#__PURE__*/React.createElement(\"div\",{className:data.tasks[data.tasks.length-1].isComplete?\"complete mx-2 px-3\":\"incomplete mx-2 px-3\"},\"COMPLETED\")),/*#__PURE__*/React.createElement(\"div\",{className:\"scroll\"},data.tasks.map(function(el,index){return/*#__PURE__*/React.createElement(TimelineItem,{el:el,key:index});})),/*#__PURE__*/React.createElement(\"h2\",null,\"Progress: (\",Math.round(+data.tasks.filter(function(x){return x.isComplete;}).length/data.tasks.length*100),\"%)\"),/*#__PURE__*/React.createElement(\"progress\",{className:\"progress mb-5\",value:Math.round(+data.tasks.filter(function(x){return x.isComplete;}).length/data.tasks.length*100),max:\"100\"}));};export default TimeLine;","map":{"version":3,"sources":["/home/rajesh/carto/carto/src/Timeline.js"],"names":["React","data","TimelineItem","TimeLine","name","tasks","length","isComplete","map","el","index","Math","round","filter","x"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,gBAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,sBACf,2BAAK,SAAS,CAAC,UAAf,eACE,2BAAK,SAAS,CAAC,WAAf,eACE,8BAAKF,IAAI,CAACG,IAAV,KADF,cAEE,2BACE,SAAS,CACPH,IAAI,CAACI,KAAL,CAAWJ,IAAI,CAACI,KAAL,CAAWC,MAAX,CAAoB,CAA/B,EAAkCC,UAAlC,CACI,oBADJ,CAEI,sBAJR,cAFF,CADF,cAWE,2BAAK,SAAS,CAAC,QAAf,EACCN,IAAI,CAACI,KAAL,CAAWG,GAAX,CAAe,SAACC,EAAD,CAAKC,KAAL,qBACd,oBAAC,YAAD,EAAc,EAAE,CAAED,EAAlB,CAAsB,GAAG,CAAEC,KAA3B,EADc,EAAf,CADD,CAXF,cAiBI,4CAEEC,IAAI,CAACC,KAAL,CACC,CAACX,IAAI,CAACI,KAAL,CAAWQ,MAAX,CAAkB,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACP,UAAT,EAAlB,EAAuCD,MAAxC,CAAiDL,IAAI,CAACI,KAAL,CAAWC,MAA7D,CACA,GAFA,CAFF,MAjBJ,cAyBI,gCAAU,SAAS,CAAC,eAApB,CAAoC,KAAK,CAAEK,IAAI,CAACC,KAAL,CACxC,CAACX,IAAI,CAACI,KAAL,CAAWQ,MAAX,CAAkB,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACP,UAAT,EAAlB,EAAuCD,MAAxC,CAAiDL,IAAI,CAACI,KAAL,CAAWC,MAA7D,CACA,GAFyC,CAA3C,CAGG,GAAG,CAAC,KAHP,EAzBJ,CADe,EAAjB,CAkCA,cAAeH,CAAAA,QAAf","sourcesContent":["import React from \"react\";\nimport { data } from \"./timelineData\";\nimport TimelineItem from \"./TimelineItem\";\n\nconst TimeLine = () => (\n  <div className=\"timeline\">\n    <div className=\"flex mt-5\">\n      <h1>{data.name}:</h1>\n      <div\n        className={\n          data.tasks[data.tasks.length - 1].isComplete\n            ? \"complete mx-2 px-3\"\n            : \"incomplete mx-2 px-3\"\n        }\n      >COMPLETED</div>\n    </div>\n    <div className=\"scroll\">\n    {data.tasks.map((el, index) => (\n      <TimelineItem el={el} key={index} />\n    ))}\n    </div>\n\n      <h2>\n        Progress:\n      ({Math.round(\n        (+data.tasks.filter((x) => x.isComplete).length / data.tasks.length) *\n        100\n        )}%)\n      \n    </h2>\n      <progress className=\"progress mb-5\" value={Math.round(\n        (+data.tasks.filter((x) => x.isComplete).length / data.tasks.length) *\n        100\n      )} max=\"100\" />\n  </div>\n);\n\n\nexport default TimeLine;\n"]},"metadata":{},"sourceType":"module"}